\" obus-gen-interface.1
\" --------------------
\" Copyright : (c) 2010, Jeremie Dimino <jeremie@dimino.org>
\" Licence   : BSD3
\"
\" This file is a part of obus, an ocaml implementation of D-Bus.

.TH OBUS-GEN-INTERFACE 1 "April 2010"

.SH NAME
obus-gen-interface \- convert D-Bus introspection files to ocaml code

.SH SYNOPSIS
.B obus-gen-interface
[
.I options
]
.I input-file

.SH DESCRIPTION

.B obus-gen-interface
generates an OCaml module from a D-Bus introspection file. The
generated module contains methods, signals and properties
definitions. It is required for by both client-side and server-side
code.

Note that the files generated by
.B obus-gen-interface
are not meant to be edited.

.SH OPTIONS

.IP "-o output-prefix"
Use this name as output prefix. It defaults to the input file name
without its extension and extended with "_interfaces". For example, if
the input file name is "foo.xml" (or "foo.obus"), then
"obus-gen-interface" will generate "foo_interfaces.ml" and
"foo_interfaces.mli".

.IP "-keep-common"
Keeps common interfaces, i.e. all interfaces starting with
"org.freedesktop.DBus". By default they are dropped.

.IP "-mode {both|client|server}"
Set the code generation mode. It defaults to "both". In "client" mode,
only code for client-side use is generated. In "server" mode, only
code for server-side use is generated. In "both" mode, code for
client-side and server-side use is generated.

.IP "-help or --help"
Display a short usage summary and exit.

.SH AUTHOR
Jérémie Dimino <jeremie@dimino.org>

.SH "SEE ALSO"
.BR obus-introspect (1),
.BR obus-gen-client (1),
.BR obus-gen-server (1).
